Addressing an Array - use [] ex: console.log(teachers[0]) //'shane'

-- FUNCTIONS --


-- getting array length
teachers.length; //2 (get array's length)


-- push and pop
let teachers = ['Assaf', 'Shane'];
teachers.push('Zack'); //['Assaf', 'Shane', 'Zack']
let teacher1 = teachers.pop(); // teacher1 == 'Zack', teachers == ['Assaf', 'Shane']

-- shift and unshift (from the front of the array)
let teachers = ['Assaf', 'Shane'];
teachers.unshift('Zack'); // ['Zack', 'Assaf', 'Shane']
let teacher = teachers.shift(); // teacher == 'Zack', teachers = ['Assaf', 'Shane"]

-- Arbitrary Adding
teachers[4] = 'James Taylor'; // ['Assaf', 'Shane', 'Zack', undefined, 'James Taylor'];
teachers[4] = 'Billy Joel'; // ['Assaf', 'Shane', 'Zack', undefined, 'Billy Joel']; 

-- Finding an item
let a = [10, 11, 20];
a.indexOf(11); //1

-- slicing and splicing array
slice() needs 2 arguements - start and end
    it returns a new array the new arry will hold the element from the given start index up to the one right BEFORE the specified end of index.

splice() is a mutating functions that takes at least 2 arguements. 


let a = [1,2,3,4];

//Slice - doesn't mutate array, slice(start,end)
a.slice(0,2); //[1,2]
'abcd'.slice(1,3) // 'bc'

//Splice - splice(start,numToRemove,...items to add) - this does mutate
a.splice(1,2,'a','b'); //a is [1,'a','b',4]

-- Iterating over an array
JavaScript has 2 main ways of iterating over arrays

		
	//Iterating over Arrays using for loop and forEach
		let teachers = ['Assaf', 'Shane', 'Zack']
		for(let i = 0; i < teachers.length; i++) {
		console.log(teachers[i]);
		}

	//Uses a function
	teachers.forEach(function(item, index) {
	console.log(item, index);
	});

** --- this code will count through the array and add all the numbers together ---**
// Setup
var myArr = [ 2, 3, 4, 5, 6];

// Only change code below this line
let total = 0;
for (var i = 0; i < myArr.length; i++) {
  total += myArr[i];
};


